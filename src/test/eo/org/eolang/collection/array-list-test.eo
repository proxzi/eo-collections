+package org.eolang.collection
+alias org.eolang.collection.array-list
+junit

[] > test-array-list-get
  array-list (* "apple" "egg" "baby" "carrot") > a
  and. > @
    eq.
      a.get 0
      "apple"
    eq.
      a.get 2
      "baby"

[] > test-array-list-index-of
  array-list (* 1 2 3) > arr
  eq. > @
    arr.index-of 3
    2

[] > test-array-list-index-of-not
  array-list (* 1 2 3) > arr
  eq. > @
    arr.index-of 6
    -1

[] > test-array-list-contains-true
  array-list (* 1 2 3) > arr
  eq. > @
    arr.contains 2
    TRUE

[] > test-array-list-contains-false
  array-list (* 1 2 3) > arr
  eq. > @
    arr.contains 5
    FALSE

[] > test-array-list-eq
  array-list (* 1 2 3) > a
  array-list (* 1 2 3) > b
  eq. > @
    a
    b

[] > test-array-list-add
  array-list (* 1 2 3) > a
  array-list (* 1 2 3 10) > b
  eq. > @
    (a.add 10)
    b

[] > test-array-list-add-all
  array-list (* "apple" "egg") > a
  array-list (* "pineapple" "carrot ") > b
  array-list (* "apple" "egg" "pineapple" "carrot") > c
  eq. > @
    (a.add-all b)
    c

[] > test-array-list-insert
  array-list (* "apple" "egg" "pineapple" "carrot") > a
  array-list (* "apple" "egg" "baby" "pineapple" "carrot") > b
  eq. > @
    (a.insert 2 "baby")
    b

[] > test-array-list-sub-list
  array-list (* "apple" "egg" "baby" "pineapple" "carrot") > a
  array-list (* "apple" "egg" "baby") > b
  eq. > @
    (a.sub-list 0 3)
    b

[] > test-array-list-remove-index
  array-list (* "apple" "egg" "baby" "pineapple" "carrot") > a
  array-list (* "apple" "egg" "baby" "carrot") > b
  eq. > @
    remove.
      a
      3
    b

